doctype html
html
  head
    title Dashboard de Inversiones
    link(rel='stylesheet' href='/css/paginasStyles.css')
    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
    script(src="https://cdn.jsdelivr.net/npm/chart.js")
  body
    nav
      ul(class='navbar')
        .inicio
          li 
            a(href="/" class='linknav') Inicio
          li 
            a(href="/dashboard" class='linknav') Dashboard 

    .titulo-principal
      h1 Dashboard

    .seccion-principal
      h1 Dashboard de Inversiones
      if inversiones && inversiones.length === 0
        p No hay inversiones.
      else if inversiones
        each inversion in inversiones
          div
            h2 #{inversion.tipo_inversion}: #{inversion.tipo.charAt(0).toUpperCase() + inversion.tipo.slice(1)}
            canvas(id="grafica-#{inversion.tipo}-#{inversion.id}" width="400" height="200")
      else
        p Error al cargar las inversiones.
      script.
        document.addEventListener('DOMContentLoaded', function() {
          cargarDatosInversiones();
        });

        let graficas = {};

        async function cargarDatosInversiones() {
          try {
            const response = await axios.get(`${process.env.BASE_URL}/dashboard`);
            const inversiones = response.data;
            console.log('Inversiones cargadas:', inversiones);
            if (inversiones.length > 0) {
              inversiones.forEach(inversion => {
                cargarGrafica(inversion.id, 'historico', inversion.usuario_id);
                cargarGrafica(inversion.id, 'ajustado', inversion.usuario_id);
                cargarGrafica(inversion.id, 'montecarlo', inversion.usuario_id);
              });
            }
          } catch (error) {
            console.error('Error al cargar datos de inversiones:', error);
          }
        }

        async function cargarGrafica(inversionId, tipoSimulacion, usuarioId) {
          try {
            console.log(`Cargando gráfica para la inversión ${inversionId} con el tipo de simulación ${tipoSimulacion}`);
            const response = await axios.get(`${process.env.BASE_URL}/dashboard/resultados/${inversionId}/${tipoSimulacion}/${usuarioId}`);
            const resultados = response.data;
            console.log(`Resultados cargados para la inversión ${inversionId}:`, resultados);

            const canvas = document.getElementById(`grafica-${tipoSimulacion}-${inversionId}`);
            if (!canvas) {
              console.error(`Canvas con id grafica-${tipoSimulacion}-${inversionId} no encontrado`);
              return;
            }

            const ctx = canvas.getContext('2d');
            if (!ctx) {
              console.error(`Contexto 2D no encontrado para canvas con id grafica-${tipoSimulacion}-${inversionId}`);
              return;
            }

            const labels = resultados.map(r => `Periodo ${r.periodo}`);
            const data = resultados.map(r => r.resultado);

            if (graficas[`${tipoSimulacion}-${inversionId}`]) {
              graficas[`${tipoSimulacion}-${inversionId}`].destroy();
            }

            graficas[`${tipoSimulacion}-${inversionId}`] = new Chart(ctx, {
              type: 'line',
              data: {
                labels: labels,
                datasets: [{
                  label: `Crecimiento ${tipoSimulacion}`,
                  data: data,
                  fill: true,
                  borderColor: 'rgb(255, 255, 255)',
                  tension: 0.1
                }]
              },
              options: {
                scales: {
                  x: {
                    beginAtZero: true
                  }
                }
              }
            });
          } catch (error) {
            console.error(`Error al cargar datos de la gráfica ${inversionId}:`, error);
          }
        }
